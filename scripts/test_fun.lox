print clock();
print clock;

fun add(a, b) {
    print a + b;
}

add(7, 5);

fun add3(a, b, c) {
  print a + b + c;
}

add3(1, 2, 3);

fun count(n) {
  if (n > 1) count(n - 1);
  print n;
}

count(3);

print add;
print add3;
print count;

fun sayHi(first, last) {
  print "Hi, " + first + " " + last + "!";
}

sayHi("Dear", "Reader");

fun adder(a, b) {
    return a + b;
}

print '1+2 = ' + adder(1, 2);
print '2+2 = ' + adder(2, 2);

fun count(n) {
  while (n < 100) {
    if (n == 3) return n; // <--
    print n;
    n = n + 1;
  }
}

print 'count(1) == 3 ' + (count(1) == 3);

fun fibonacci(n) {
  if (n <= 1) return n;
  return fibonacci(n - 2) + fibonacci(n - 1);
}

var fib = '';
for (var i = 0; i < 20; i = i + 1) {
  fib = fib + ' ' + fibonacci(i);
}
print fib;

# ---
fun makeCounter() {
    var i = 0;
    fun count() {
        i = i + 1;
        print i;
    }

    return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".

fun thrice(fn) {
  for (var i = 1; i <= 3; i = i + 1) {
    fn(i);
  }
}

thrice(fun (a) {
  print '--> ' + a + ' <--';
});

fun str(s) {
    return '' + s;
}
var s = fun () {};
print s + " " + (str(s) == '<fn anonymous function>');
print s();

print '---';
var a = "global";
{
  fun showA() {
    print a + ' --> ' + (a == 'global');
  }

  showA();
  var a = "block";
  showA();
}

fun fn(a, b, c) {
    var f = fun(x) { return x * x; };
    return f(a) + f(b) + f(c);
}
print fn(1, 2, 3);